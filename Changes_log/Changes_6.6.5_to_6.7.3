1.  the standard default SAM single-moment microphysics was complemented with a two-moment scheme of Hugh Morrison. Huge thanks to Peter Blossey who did most of the work of porting it to SAM from WRF and of course to Hugh who let us use it. M2005 microphysics has 11 prognostic microphysical variables compared to just 3 in SAM. Consequently, SAM-M2005 has been timed to run at least 3 times slower than with default microphysics; however, it allows for more physical realism and hence, I think, is worth the additional expense. For details, see the README file in MICRO_M2005 directory.

2. A simplified version of Khairoutdinov & Kogan (2000) warm microphysics parameterization was also added, specifically the prognostic drizzle drop concentration. There is no CCN, cloud water is still diagnosed but cloud drop concentration is specified as external parameter. Note that even though it appears to work fine (I used it for the GCSS WG1 DYCOMS-RF02 case), it was not properly tested and I provide it as a courtesy only. Play at your own risk. The directory is MICRO_DRIZZLE.

3. Thanks to Steven Krueger and Peter Bogenschutz, SAM's diagnostics has substantially expanded by the addition of tons of 3D diagnostic statistical fields that can be stored on degraded resolution compared to the SAM grid; for example, 800-m grid statistics collected using 100 m SAM grid information. This great diagnostics package can be invaluable for developing new or validating existing subgrid-scale parameterizations. See Changes_log/README.UUmods and SRC/stat_moments.f90 for details. Also, there is a way of producing visualizations on the fly while running the model. See the updated User's Guide (and SRC/movies.f90) for details. This is done also as a courtesy but you will have to figure out how to make the movie yourself. The new SCRIPT directory has some clues as well as some sample csh and NCL scripts.

4. Thanks again to Peter Blossey, SAM can now read standard SCAM (single-column version of CAM) input data files in netcdf format. For details and data you should kindly email Peter. 

5. I t was found that when run on very large number of processors, it becomes very inefficient to output 3D field and 2D fields through node 0, so one can choose now to set the flag output_sep to true (default .false.), so that each MPI task will write its own output (it doesn't concern output of *.stat files). This will require post-run assembly though. I am not quite sutisfied with this solution and will continue working on alternative (my recent large run, for example, generated almost 2 million files, ouch...).

Also, by default now, the 2D x-y files are outputted as snapshots not average over time; the latter can be acomplished by setting save2Davg to .true. (default .false.). 

There is a new namelist variable  nrestart_skip (default 0)As some of you may know, the restart file is written every time a new time step is written into the *.stat (statistics) file. To avoid saving restart too often (which can be an issue when running really big domains), you can specify how many time you can skip writing restart files. The could make potential problem on restart when previous run ended before saving the restart files but the stat file was already updated, but I modified the hbuffer.f90 so that the *.stat file is appended at the correct time point (the last time the restart file was saved). 
Example of use: if statistics is saved every 5 min, then nrestart_skip=11 means that the restart files will be written every one hour. 

6. Besides mentioned in 5, there have been also quite a few new namelist variables added. Please check an updated User's Guide in DOC directory.  For example, you can initialize SAM now with warm bubble (nice thing when modeling a supercell or squall line). Also, the cloud updraft and downdraft core statistics as well as some other conditional cloud statistic by default are no longer collected in *.stat files following the University of Washington group approach to reduce size of those files. See the Changes_log/README.UWmods_6.7 for details provided by Peter Blossey as well as the User's Guide. Also, the Build/Makefile scripts have been modified to reflect different microphysics options. One of the changes is that the executable now has much longer name to make it easier to identify which microphysics it was compiled with.

Please note that RAD_CCM (original CCM radiation) was removed from distribution, so the RAD_CAM remains the only radiation from CAM currently supported.

Other changes:

tke_full.f90: Removed temperature diagnostics for omn because of possibility of using other microphysics packages.

if ncycle>1 when dostatis is true, the radiative fluxes will not be properly added to s_flns, etc. for their output in the stat file as timeseries of LWNS, etc.  The fix is to add a new flag, dostatisrad, which is true when icycle==1.  dostatis is true only when icycle==ncycle.  Affected files: grid.f90, main.f90, RAD_CAM/rad_full.f90 (thanks UW group for noticing this bug)

The surface stress issue. UW group noticed that in CEM mode the surface stress is computed based on 0.5*(u(i)+u(i+1)) and then is applied only to u(i) in diffuse_mom.  This one is a hard one to fix. I implemented the fix that the stresses and scalar fluxes are now computed separately. For that the surface temperature at the boundaries should be also passed and hanse dimensionality of sstxy array had to be changed and the boundary values need to ba passed around as well (call boundaries(0)). Also, the sequence of calls in main was slightly rearranged (without changing results). Affected files: vars.f90, main.f90, surface.f90, task_boundaries.f90, periodic.f90. In LES mode results are identical to those before the change. 
